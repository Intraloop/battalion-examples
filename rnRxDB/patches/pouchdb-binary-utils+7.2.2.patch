diff --git a/node_modules/pouchdb-binary-utils/lib/index.js b/node_modules/pouchdb-binary-utils/lib/index.js
index 62d630c..8dc764e 100644
--- a/node_modules/pouchdb-binary-utils/lib/index.js
+++ b/node_modules/pouchdb-binary-utils/lib/index.js
@@ -53,7 +53,18 @@ function createBlob() {
 }
 
 function blobToBase64(blobOrBuffer, callback) {
-  callback(blobOrBuffer.toString('base64'));
+  if (blobOrBuffer.size) {
+    var reader = new FileReader();
+    reader.onloadend = function (e) {
+    const text = e.target.result || '';
+    const base64 = text.split(',')[1];
+    callback(base64);
+    };
+      reader.readAsDataURL(blobOrBuffer);
+    } else {
+      const base64 = blobOrBuffer.toString('base64');
+      setImmediate(() => callback(base64));
+    }
 }
 
 // not used in Node, but here for completeness
@@ -86,20 +97,10 @@ function arrayBufferToBinaryString(buffer) {
 
 // shim for browsers that don't support it
 function readAsBinaryString(blob, callback) {
-  var reader = new FileReader();
-  var hasBinaryString = typeof reader.readAsBinaryString === 'function';
-  reader.onloadend = function (e) {
-    var result = e.target.result || '';
-    if (hasBinaryString) {
-      return callback(result);
-    }
-    callback(arrayBufferToBinaryString(result));
-  };
-  if (hasBinaryString) {
-    reader.readAsBinaryString(blob);
-  } else {
-    reader.readAsArrayBuffer(blob);
-  }
+  blobToBase64(blob, (base64) => {
+    const binaryString = atob(base64);
+    callback(binaryString);
+  });
 }
 
 exports.atob = thisAtob;
